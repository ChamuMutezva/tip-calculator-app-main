{"version":3,"sources":["main.js"],"names":["radioBtn","Array","from","document","querySelectorAll","numPeople","querySelector","bill","custom","resetBtn","numberRegex","validate","totalAmount","totalTipAmount","totalAmountWithTip","tipPerPerson","totalPerPerson","validateNumbers","numToValidate","element","errSpan","Number","value","console","log","classList","remove","add","peopleErr","innerHTML","calculateBill","billedAmount","disabled","display","calculateDisplayTotals","tips","totals","dollarsUS","Intl","NumberFormat","style","currency","displayTip","displayTotalAmount","format","forEach","item","addEventListener","evt","target","validNum","test","billErr","checked"],"mappings":";AAAA,IAAMA,EAAWC,MAAMC,KAAKC,SAASC,iBAAiB,aAChDC,EAAYF,SAASG,cAAc,gBACnCC,EAAOJ,SAASG,cAAc,SAC9BE,EAASL,SAASG,cAAc,WAChCG,EAAWN,SAASG,cAAc,UAClCI,EAAc,sDAChBC,GAAW,EAGXC,EAAc,EACdC,EAAiB,EACjBC,EAAqB,EACrBC,EAAe,EACfC,EAAiB,EAerB,SAASC,EAAgBC,EAAeC,EAASC,GACzCF,EACIG,OAAOF,EAAQG,QAAU,GACzBC,QAAQC,IAAI,gBACZJ,EAAQK,UAAUC,OAAO,aACzBP,EAAQM,UAAUC,OAAO,mBACzBP,EAAQM,UAAUE,IAAI,iBACtBC,UAAUC,UAAY,mCAEtBT,EAAQK,UAAUE,IAAI,aACtBR,EAAQM,UAAUE,IAAI,mBACtBR,EAAQM,UAAUC,OAAO,iBACzBI,EAAcvB,KAIlBgB,QAAQC,IAAI,gBACZJ,EAAQK,UAAUC,OAAO,aACzBP,EAAQM,UAAUC,OAAO,mBACzBP,EAAQM,UAAUE,IAAI,iBACtBP,EAAQS,UAAY,gBA+B5B,SAASC,EAAcC,GAGfxB,OAFJI,GAAW,IAEQ,KAAfJ,EAAKe,OAAgBD,OAAOd,EAAKe,QAAU,KAO3CV,EAAcS,OAAOd,EAAKe,SAGF,KAApBjB,EAAUiB,OAAgBD,OAAOhB,EAAUiB,QAAU,KAKrDT,EAAiBD,EAAcS,OAAOU,EAAaT,OAAS,IAC5DR,EAAqBF,EAAcC,EACnCE,EAAeF,EAAiBQ,OAAOhB,EAAUiB,OACjDN,EAAiBF,EAAqBO,OAAOhB,EAAUiB,OACvDX,GAAW,EAGPF,EAASuB,UADTrB,EAMJsB,KACO,IAMnB,SAASC,EAAuBC,EAAMC,GAC5BC,IAAAA,EAAYC,KAAKC,aAAa,QAAS,CACzCC,MAAO,WACPC,SAAU,QAERC,EAAavC,SAASG,cAAc,eACpCqC,EAAqBxC,SAASG,cAAc,iBAClDoC,EAAWb,UAAYQ,EAAUO,OAAOT,GACxCQ,EAAmBd,UAAYQ,EAAUO,OAAOR,GAGpD,SAASH,IACLC,EAAuBnB,EAAcC,GAjHzCO,QAAQC,IAAIb,GAERF,EAASuB,UADTrB,EAMJX,EAAS6C,QAAQ,SAAAC,GACbA,EAAKC,iBAAiB,SAAU,SAACC,GAC7BlB,EAAckB,EAAIC,YA6B1B1C,EAAKwC,iBAAiB,QAAS,SAACC,GACtBE,IAAAA,EAAWxC,EAAYyC,KAAK5C,EAAKe,OACjC8B,EAAUjD,SAASG,cAAc,cACvCW,EAAgBiC,EAAU3C,EAAM6C,KAIpC/C,EAAU0C,iBAAiB,QAAS,SAACC,GAC3BE,IAAAA,EAAWxC,EAAYyC,KAAK9C,EAAUiB,OACtCM,EAAYzB,SAASG,cAAc,gBACzCW,EAAgBiC,EAAU7C,EAAWuB,KAGzCpB,EAAOuC,iBAAiB,QAAS,SAACC,GAE9BhD,EAAS6C,QAAQ,SAAAC,GACbA,EAAKO,SAAU,MAIvB7C,EAAOuC,iBAAiB,QAAS,SAACC,GAE9BlB,EAActB,KAwDlBC,EAASsC,iBAAiB,QAAS,WAG/Bb,EAFAnB,EAAe,EACfC,EAAiB,GAEjBO,QAAQC,IAAIT","file":"main.89831aed.js","sourceRoot":"..","sourcesContent":["const radioBtn = Array.from(document.querySelectorAll(\".percent\"))\r\nconst numPeople = document.querySelector(\".num__people\")\r\nconst bill = document.querySelector(\".bill\")\r\nconst custom = document.querySelector(\".custom\")\r\nconst resetBtn = document.querySelector(\".reset\")\r\nconst numberRegex = /^\\s*[+-]?(\\d+|\\.\\d+|\\d+\\.\\d+|\\d+\\.)(e[+-]?\\d+)?\\s*$/\r\nlet validate = false\r\n\r\n//console.log(bill)\r\nlet totalAmount = 0\r\nlet totalTipAmount = 0\r\nlet totalAmountWithTip = 0\r\nlet tipPerPerson = 0\r\nlet totalPerPerson = 0\r\n\r\nconsole.log(validate)\r\nif (validate) {\r\n    resetBtn.disabled = false\r\n} else {\r\n    resetBtn.disabled = true\r\n}\r\n\r\nradioBtn.forEach(item => {\r\n    item.addEventListener(\"change\", (evt) => {\r\n        calculateBill(evt.target)\r\n    })\r\n})\r\n\r\nfunction validateNumbers(numToValidate, element, errSpan) {\r\n    if (numToValidate) {\r\n        if (Number(element.value) <= 0) {\r\n            console.log(\"not a number\")\r\n            errSpan.classList.remove(\"hide__err\")\r\n            element.classList.remove(\"correct__format\")\r\n            element.classList.add(\"wrong__format\")\r\n            peopleErr.innerHTML = \"Number can not be zero or less\"\r\n        } else {\r\n            errSpan.classList.add(\"hide__err\")\r\n            element.classList.add(\"correct__format\")\r\n            element.classList.remove(\"wrong__format\")\r\n            calculateBill(bill)\r\n        }\r\n    }\r\n    else {\r\n        console.log(\"not a number\")\r\n        errSpan.classList.remove(\"hide__err\")\r\n        element.classList.remove(\"correct__format\")\r\n        element.classList.add(\"wrong__format\")\r\n        errSpan.innerHTML = \"Not a number\"\r\n    }\r\n\r\n}\r\n\r\nbill.addEventListener(\"input\", (evt) => {\r\n    const validNum = numberRegex.test(bill.value)\r\n    const billErr = document.querySelector(\".bill__err\")\r\n    validateNumbers(validNum, bill, billErr)\r\n\r\n})\r\n\r\nnumPeople.addEventListener(\"input\", (evt) => {\r\n    const validNum = numberRegex.test(numPeople.value)\r\n    const peopleErr = document.querySelector(\".people__err\")\r\n    validateNumbers(validNum, numPeople, peopleErr)\r\n})\r\n\r\ncustom.addEventListener(\"focus\", (evt) => {\r\n    // console.log(evt.target)\r\n    radioBtn.forEach(item => {\r\n        item.checked = false\r\n    })\r\n\r\n})\r\ncustom.addEventListener(\"input\", (evt) => {\r\n    // console.log(custom.value)\r\n    calculateBill(custom)\r\n})\r\n\r\n\r\nfunction calculateBill(billedAmount) {\r\n    validate = false\r\n\r\n    if (bill.value === \"\" || Number(bill.value) <= 0) {\r\n        //if the bill is an empty string (no data has been entered) or\r\n        // if the bill entered is less that or equal to 0 , then return without doing anything\r\n        // console.log(\"escape\")\r\n        return false\r\n    }\r\n    else {\r\n        totalAmount = Number(bill.value)\r\n        //  console.log(bill.value !== \"\" || Number(bill.value) >= 0)\r\n        //   console.log(`total amount is: ${totalAmount}`)\r\n        if (numPeople.value === \"\" || Number(numPeople.value) <= 0) {\r\n            // console.log(\"do nothing\")\r\n            // validate = false\r\n            return false\r\n        } else {\r\n            totalTipAmount = totalAmount * Number(billedAmount.value) / 100 //evt.target\r\n            totalAmountWithTip = totalAmount + totalTipAmount\r\n            tipPerPerson = totalTipAmount / Number(numPeople.value)\r\n            totalPerPerson = totalAmountWithTip / Number(numPeople.value)\r\n            validate = true\r\n\r\n            if (validate) {\r\n                resetBtn.disabled = false\r\n            } else {\r\n                resetBtn.disabled = true\r\n            }\r\n\r\n            display()\r\n            return true\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction calculateDisplayTotals(tips, totals) {\r\n    const dollarsUS = Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n    })\r\n    const displayTip = document.querySelector(\".tip__value\")\r\n    const displayTotalAmount = document.querySelector(\".total__value\")\r\n    displayTip.innerHTML = dollarsUS.format(tips)\r\n    displayTotalAmount.innerHTML = dollarsUS.format(totals)\r\n}\r\n\r\nfunction display() {\r\n    calculateDisplayTotals(tipPerPerson, totalPerPerson)\r\n}\r\n\r\nresetBtn.addEventListener(\"reset\", () => {\r\n    tipPerPerson = 0\r\n    totalPerPerson = 0\r\n    calculateDisplayTotals(tipPerPerson, totalPerPerson)\r\n    console.log(tipPerPerson)\r\n})"]}