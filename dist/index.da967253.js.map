{"mappings":"ACAA,MAAM,EAAW,MAAM,IAAI,CAAC,SAAS,gBAAgB,CAAC,aAChD,EAAY,SAAS,aAAa,CAAC,gBACnC,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAS,SAAS,aAAa,CAAC,WAChC,EAAW,SAAS,aAAa,CAAC,UAClC,EAAc,qDAAsD,mBAAmB;CACvF,EAAO,SAAS,aAAa,CAAC,SACpC,IAGI,EAAc,EACd,EAAiB,EACjB,EAAqB,EACrB,EAAe,EACf,EAAiB,EAkBrB,SAAS,EAAgB,CAAa,CAAE,CAAO,CAAE,CAAO,EACpD,IAAI,EAAO,CAAE,qCAAqC;CAClD,QAAQ,GAAG,CAAC,GACZ,QAAQ,GAAG,CAAC,EAEZ,kDAAiD;AACjD,kDAAkD;AAClD,IAAM,EAAgB,EAAS,MAAM,CAAC,AAAA,GAAO,AAAgB,CAAA,IAAhB,EAAI,OAAO,EAKpD,EADA,AAAyB,IAAzB,EAAc,MAAM,CACb,OAAO,EAAO,KAAK,EAEnB,OAAO,CAAa,CAAC,EAAE,CAAC,KAAK,EAExC,QAAQ,GAAG,CAAC,GACZ,QAAQ,GAAG,CAAC,GAER,GAEI,AAA2B,GAA3B,OAAO,EAAU,KAAK,GAAU,AAAsB,GAAtB,OAAO,EAAK,KAAK,GACjD,EAAS,QAAQ,CAAG,CAAA,EACrB,EAAQ,SAAS,CAAG,gCAEnB,EAAS,QAAQ,CAAG,CAAA,EAGpB,AAAyB,GAAzB,OAAO,EAAQ,KAAK,GACrB,8BAA8B;AAC7B,EAAQ,SAAS,CAAC,MAAM,CAAC,aACzB,EAAQ,SAAS,CAAC,MAAM,CAAC,mBACzB,EAAQ,SAAS,CAAC,GAAG,CAAC,iBACtB,EAAuB,IAAK,KAC5B,EAAQ,SAAS,CAAG,iCAGpB,EAAQ,SAAS,CAAC,GAAG,CAAC,aACtB,EAAQ,SAAS,CAAC,GAAG,CAAC,mBACtB,EAAQ,SAAS,CAAC,MAAM,CAAC,iBACzB,EAAc,EAAK,KAAK,CAAE,EAAO,EAAU,KAAK,KAMtD,+BAA+B;AAC7B,EAAQ,SAAS,CAAC,MAAM,CAAC,aACzB,EAAQ,SAAS,CAAC,MAAM,CAAC,mBACzB,EAAQ,SAAS,CAAC,GAAG,CAAC,iBACtB,EAAQ,SAAS,CAAG,eACpB,EAAuB,IAAK,KAIpC,CA6BA,SAAS,EAAc,CAAY,CAAE,CAAI,CAAE,CAAS,EAChD,IAAI,CAAA,AAAiB,KAAjB,GAAuB,OAAO,GAAgB,EAAA,IAG9C,EAAc,OAAO,IAGrB,CAAA,AAAc,KAAd,GAAoB,AAAqB,GAArB,OAAO,EAAc,GAW7C,OAPA,EAAiB,EAAc,OAAO,GAAQ,GAAI,YAAY;CAC9D,EAAqB,EAAc,EACnC,EAAe,EAAiB,OAAO,GACvC,EAAiB,EAAqB,OAAO,GAsB7C,EAAuB,EAAc,GAlB9B,CAAA,CACX,CAGA,SAAS,EAAuB,CAAI,CAAE,CAAM,EACxC,IAAM,EAAY,KAAK,YAAY,CAAC,QAAS,CACzC,MAAO,WACP,SAAU,KACd,GACM,EAAa,SAAS,aAAa,CAAC,eACpC,EAAqB,SAAS,aAAa,CAAC,gBAClD,CAAA,EAAW,SAAS,CAAG,EAAU,MAAM,CAAC,GACxC,EAAmB,SAAS,CAAG,EAAU,MAAM,CAAC,EAChD,gDAA+C;AAC/C,0DAA0D;AAC9D,CArIA,QAAQ,GAAG,CATI,CAAA,GAUX,AAA2B,GAA3B,OAAO,EAAU,KAAK,EACtB,EAAS,QAAQ,CAAG,CAAA,EAEpB,EAAS,QAAQ,CAAG,CAAA,EAGxB,EAAS,OAAO,CAAC,AAAA,IACb,EAAK,gBAAgB,CAAC,SAAU,AAAC,IAC9B,gCAAgC;AAC/B,0BAA0B;AAC3B,8BAA8B;AAC5B,EAAc,EAAK,KAAK,CAAE,EAAI,MAAM,CAAC,KAAK,CAAE,EAAU,KAAK,CAChE,EACJ,GA2DA,EAAK,gBAAgB,CAAC,QAAS,AAAC,IAC5B,IAAM,EAAW,EAAY,IAAI,CAAC,EAAK,KAAK,EACtC,EAAU,SAAS,aAAa,CAAC,cACvC,EAAgB,EAAU,EAAM,EACpC,GAEA,EAAU,gBAAgB,CAAC,QAAS,AAAC,IAEjC,IAAM,EAAW,EAAY,IAAI,CAAC,EAAU,KAAK,EAC3C,EAAY,SAAS,aAAa,CAAC,gBACzC,EAAgB,EAAU,EAAW,EACzC,GAEA,EAAO,gBAAgB,CAAC,QAAS,AAAC,IAC9B,0BAA0B;AAC1B,EAAS,OAAO,CAAC,AAAA,IACb,EAAK,OAAO,CAAG,CAAA,CACnB,EAEJ,GACA,EAAO,gBAAgB,CAAC,QAAS,AAAC,IAC9B,4BAA4B;AAC9B,2BAA2B;AAC3B,EAAO,OAAO,CAAG,CAAA,EACjB,EAAc,EAAK,KAAK,CAAE,EAAO,KAAK,CAAE,EAAU,KAAK,CACzD,GAyCA,EAAK,gBAAgB,CAAC,QAAS,AAAC,IAC5B,uBAAuB;AACvB,EAAc,EACd,EAAiB,EACjB,EAAqB,EACrB,EAAe,EACf,EAAiB,EACjB,EAAS,QAAQ,CAAG,CAAA,EACpB,QAAQ,GAAG,CAAC,aAChB,E,4D","sources":["<anon>","main.js"],"sourcesContent":["const radioBtn = Array.from(document.querySelectorAll(\".percent\"));\nconst numPeople = document.querySelector(\".num__people\");\nconst bill = document.querySelector(\".bill\");\nconst custom = document.querySelector(\".custom\");\nconst resetBtn = document.querySelector(\".reset\");\nconst numberRegex = /^\\s*[+-]?(\\d+|\\.\\d+|\\d+\\.\\d+|\\d+\\.)(e[+-]?\\d+)?\\s*$/ //NUMBER VALIDATION\n;\nconst form = document.querySelector(\".form\");\nlet validate = false;\n//console.log(bill)\nlet totalAmount = 0;\nlet totalTipAmount = 0;\nlet totalAmountWithTip = 0;\nlet tipPerPerson = 0;\nlet totalPerPerson = 0;\nconsole.log(validate);\nif (Number(numPeople.value) <= 0) resetBtn.disabled = true;\nelse resetBtn.disabled = false;\nradioBtn.forEach((item)=>{\n    item.addEventListener(\"change\", (evt)=>{\n        // console.log(evt.target.value)\n        // console.log(bill.value)\n        // calculateBill(evt.target) 1\n        calculateBill(bill.value, evt.target.value, numPeople.value);\n    });\n});\nfunction validateNumbers(numToValidate, element, errSpan) {\n    let rate = 5 // default rate percentage to be used\n    ;\n    console.log(radioBtn);\n    console.log(custom);\n    // check if a radio button is checked, if checked\n    // use the value of the checked button as the rate\n    const radioFiltered = radioBtn.filter((btn)=>btn.checked === true);\n    // if radioFiltered contains an empty array , then no radio\n    // button is selected - meaning that the custom button is to be used\n    if (radioFiltered.length === 0) rate = Number(custom.value);\n    else rate = Number(radioFiltered[0].value);\n    console.log(radioFiltered);\n    console.log(rate);\n    if (numToValidate) {\n        // console.log(validate)\n        if (Number(numPeople.value) <= 0 || Number(bill.value) <= 0) {\n            resetBtn.disabled = true;\n            errSpan.innerHTML = \"Number can't be zero or less\";\n        } else resetBtn.disabled = false;\n        if (Number(element.value) <= 0) {\n            // console.log(\"not a number\")\n            errSpan.classList.remove(\"hide__err\");\n            element.classList.remove(\"correct__format\");\n            element.classList.add(\"wrong__format\");\n            calculateDisplayTotals(\"0\", \"0\");\n            errSpan.innerHTML = \"Number can't be zero or less\";\n        //  resetBtn.disabled = false\n        } else {\n            errSpan.classList.add(\"hide__err\");\n            element.classList.add(\"correct__format\");\n            element.classList.remove(\"wrong__format\");\n            calculateBill(bill.value, rate, numPeople.value);\n        // calculateBill(bill) 1\n        // resetBtn.disabled = false\n        }\n    } else {\n        //  console.log(\"not a number\")\n        errSpan.classList.remove(\"hide__err\");\n        element.classList.remove(\"correct__format\");\n        element.classList.add(\"wrong__format\");\n        errSpan.innerHTML = \"Not a number\";\n        calculateDisplayTotals(\"0\", \"0\");\n    // resetBtn.disabled = true\n    }\n}\nbill.addEventListener(\"input\", (evt)=>{\n    const validNum = numberRegex.test(bill.value);\n    const billErr = document.querySelector(\".bill__err\");\n    validateNumbers(validNum, bill, billErr);\n});\nnumPeople.addEventListener(\"input\", (evt)=>{\n    const validNum = numberRegex.test(numPeople.value);\n    const peopleErr = document.querySelector(\".people__err\");\n    validateNumbers(validNum, numPeople, peopleErr);\n});\ncustom.addEventListener(\"focus\", (evt)=>{\n    // console.log(evt.target)\n    radioBtn.forEach((item)=>{\n        item.checked = false;\n    });\n});\ncustom.addEventListener(\"input\", (evt)=>{\n    // console.log(custom.value)\n    //  calculateBill(custom) 1\n    custom.checked = true;\n    calculateBill(bill.value, custom.value, numPeople.value);\n});\nfunction calculateBill(billedAmount, rate, numpeople) {\n    if (billedAmount === \"\" || Number(billedAmount <= 0)) return;\n    else totalAmount = Number(billedAmount);\n    if (numpeople === \"\" || Number(numpeople) <= 0) return;\n    totalTipAmount = totalAmount * Number(rate) / 100 //evt.target\n    ;\n    totalAmountWithTip = totalAmount + totalTipAmount;\n    tipPerPerson = totalTipAmount / Number(numpeople);\n    totalPerPerson = totalAmountWithTip / Number(numpeople);\n    validate = true;\n    display();\n    return true;\n}\nfunction calculateDisplayTotals(tips, totals) {\n    const dollarsUS = Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\"\n    });\n    const displayTip = document.querySelector(\".tip__value\");\n    const displayTotalAmount = document.querySelector(\".total__value\");\n    displayTip.innerHTML = dollarsUS.format(tips);\n    displayTotalAmount.innerHTML = dollarsUS.format(totals);\n//displayTip.innerHTML = dollarsUS.format(tips)\n// displayTotalAmount.innerHTML = dollarsUS.format(totals)\n}\nfunction display() {\n    calculateDisplayTotals(tipPerPerson, totalPerPerson);\n}\nform.addEventListener(\"reset\", (evt)=>{\n    // evt.preventDefault()\n    totalAmount = 0;\n    totalTipAmount = 0;\n    totalAmountWithTip = 0;\n    tipPerPerson = 0;\n    totalPerPerson = 0;\n    resetBtn.disabled = true;\n    console.log(\"form reset\");\n});\n\n//# sourceMappingURL=index.da967253.js.map\n","const radioBtn = Array.from(document.querySelectorAll(\".percent\"))\r\nconst numPeople = document.querySelector(\".num__people\")\r\nconst bill = document.querySelector(\".bill\")\r\nconst custom = document.querySelector(\".custom\")\r\nconst resetBtn = document.querySelector(\".reset\")\r\nconst numberRegex = /^\\s*[+-]?(\\d+|\\.\\d+|\\d+\\.\\d+|\\d+\\.)(e[+-]?\\d+)?\\s*$/ //NUMBER VALIDATION\r\nconst form = document.querySelector(\".form\")\r\nlet validate = false\r\n\r\n//console.log(bill)\r\nlet totalAmount = 0\r\nlet totalTipAmount = 0\r\nlet totalAmountWithTip = 0\r\nlet tipPerPerson = 0\r\nlet totalPerPerson = 0\r\n\r\nconsole.log(validate)\r\nif (Number(numPeople.value) <= 0) {\r\n    resetBtn.disabled = true\r\n} else {\r\n    resetBtn.disabled = false\r\n}\r\n\r\nradioBtn.forEach(item => {\r\n    item.addEventListener(\"change\", (evt) => {\r\n       // console.log(evt.target.value)\r\n        // console.log(bill.value)\r\n       // calculateBill(evt.target) 1\r\n         calculateBill(bill.value, evt.target.value, numPeople.value)\r\n    })\r\n})\r\n\r\nfunction validateNumbers(numToValidate, element, errSpan) {\r\n    let rate = 5 // default rate percentage to be used\r\n    console.log(radioBtn)\r\n    console.log(custom)\r\n\r\n    // check if a radio button is checked, if checked\r\n    // use the value of the checked button as the rate\r\n    const radioFiltered = radioBtn.filter(btn => btn.checked === true)\r\n\r\n    // if radioFiltered contains an empty array , then no radio\r\n    // button is selected - meaning that the custom button is to be used\r\n    if (radioFiltered.length === 0) {\r\n        rate = Number(custom.value)\r\n    } else {\r\n        rate = Number(radioFiltered[0].value)\r\n    }\r\n    console.log(radioFiltered)\r\n    console.log(rate)\r\n\r\n    if (numToValidate) {\r\n       // console.log(validate)\r\n        if (Number(numPeople.value) <= 0 || Number(bill.value) <= 0) {\r\n            resetBtn.disabled = true\r\n           errSpan.innerHTML = \"Number can't be zero or less\"\r\n        } else {\r\n            resetBtn.disabled = false\r\n        }        \r\n\r\n        if (Number(element.value) <= 0) {\r\n           // console.log(\"not a number\")\r\n            errSpan.classList.remove(\"hide__err\")\r\n            element.classList.remove(\"correct__format\")\r\n            element.classList.add(\"wrong__format\")\r\n            calculateDisplayTotals(\"0\", \"0\")\r\n            errSpan.innerHTML = \"Number can't be zero or less\"\r\n            //  resetBtn.disabled = false\r\n        } else {\r\n            errSpan.classList.add(\"hide__err\")\r\n            element.classList.add(\"correct__format\")\r\n            element.classList.remove(\"wrong__format\")\r\n            calculateBill(bill.value, rate , numPeople.value)\r\n           // calculateBill(bill) 1\r\n            // resetBtn.disabled = false\r\n        }\r\n    }\r\n    else {\r\n      //  console.log(\"not a number\")\r\n        errSpan.classList.remove(\"hide__err\")\r\n        element.classList.remove(\"correct__format\")\r\n        element.classList.add(\"wrong__format\")\r\n        errSpan.innerHTML = \"Not a number\"\r\n        calculateDisplayTotals(\"0\", \"0\")\r\n        // resetBtn.disabled = true\r\n    }\r\n\r\n}\r\n\r\nbill.addEventListener(\"input\", (evt) => {\r\n    const validNum = numberRegex.test(bill.value)\r\n    const billErr = document.querySelector(\".bill__err\")\r\n    validateNumbers(validNum, bill, billErr)\r\n})\r\n\r\nnumPeople.addEventListener(\"input\", (evt) => {\r\n  \r\n    const validNum = numberRegex.test(numPeople.value)\r\n    const peopleErr = document.querySelector(\".people__err\")\r\n    validateNumbers(validNum, numPeople, peopleErr)\r\n})\r\n\r\ncustom.addEventListener(\"focus\", (evt) => {\r\n    // console.log(evt.target)\r\n    radioBtn.forEach(item => {\r\n        item.checked = false\r\n    })\r\n\r\n})\r\ncustom.addEventListener(\"input\", (evt) => {\r\n    // console.log(custom.value)\r\n  //  calculateBill(custom) 1\r\n  custom.checked = true\r\n  calculateBill(bill.value, custom.value, numPeople.value)\r\n})\r\n\r\nfunction calculateBill(billedAmount, rate, numpeople) {\r\n    if (billedAmount === \"\" || Number(billedAmount <= 0)) {\r\n        return \r\n    } else {\r\n        totalAmount = Number(billedAmount)\r\n    }\r\n\r\n    if (numpeople === \"\" || Number(numpeople) <= 0) {       \r\n        return \r\n    }\r\n\r\n    totalTipAmount = totalAmount * Number(rate) / 100 //evt.target\r\n    totalAmountWithTip = totalAmount + totalTipAmount\r\n    tipPerPerson = totalTipAmount / Number(numpeople)\r\n    totalPerPerson = totalAmountWithTip / Number(numpeople)\r\n    validate = true\r\n\r\n    display()\r\n    return true\r\n}\r\n\r\n\r\nfunction calculateDisplayTotals(tips, totals) {\r\n    const dollarsUS = Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n    })\r\n    const displayTip = document.querySelector(\".tip__value\")\r\n    const displayTotalAmount = document.querySelector(\".total__value\")\r\n    displayTip.innerHTML = dollarsUS.format(tips)\r\n    displayTotalAmount.innerHTML = dollarsUS.format(totals)\r\n    //displayTip.innerHTML = dollarsUS.format(tips)\r\n    // displayTotalAmount.innerHTML = dollarsUS.format(totals)\r\n}\r\n\r\nfunction display() {\r\n    calculateDisplayTotals(tipPerPerson, totalPerPerson)\r\n}\r\n\r\nform.addEventListener(\"reset\", (evt) => {\r\n    // evt.preventDefault()\r\n    totalAmount = 0\r\n    totalTipAmount = 0\r\n    totalAmountWithTip = 0\r\n    tipPerPerson = 0\r\n    totalPerPerson = 0\r\n    resetBtn.disabled = true\r\n    console.log(\"form reset\")\r\n})\r\n"],"names":["radioBtn","Array","from","document","querySelectorAll","numPeople","querySelector","bill","custom","resetBtn","numberRegex","form","totalAmount","totalTipAmount","totalAmountWithTip","tipPerPerson","totalPerPerson","validateNumbers","numToValidate","element","errSpan","rate","console","log","radioFiltered","filter","btn","checked","length","Number","value","disabled","innerHTML","classList","remove","add","calculateDisplayTotals","calculateBill","billedAmount","numpeople","tips","totals","dollarsUS","Intl","NumberFormat","style","currency","displayTip","displayTotalAmount","format","forEach","item","addEventListener","evt","target","validNum","test","billErr","peopleErr"],"version":3,"file":"index.da967253.js.map"}